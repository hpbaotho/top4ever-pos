<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="DailyStatement" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <alias>
      <typeAlias alias="DailyStatement" type="Top4ever.Domain.DailyStatement, Top4ever.Domain" />
      <typeAlias alias="DailyBalanceTime" type="Top4ever.Domain.Transfer.DailyBalanceTime, Top4ever.Domain" />
      <typeAlias alias="DailyStatementInDay" type="Top4ever.Domain.Transfer.DailyStatementInDay, Top4ever.Domain" />
    </alias>

    <resultMaps>
      <resultMap id="DailyBalanceTimeResult" class="DailyBalanceTime">
        <result property="DailyStatementNo" column="DailyStatementNo"></result>
        <result property="MinTime" column="MinTime"></result>
        <result property="MaxTime" column="MaxTime"></result>
      </resultMap>

      <resultMap id="DailyStatementInDayResult" class="DailyStatementInDay">
        <result property="BelongToDate" column="BelongToDate"></result>
        <result property="ActualTotalIncome" column="ActualTotalIncome"></result>
      </resultMap>
    </resultMaps>

    <parameterMaps>
      <parameterMap id="DailyStatementParam" class="Hashtable">
        <parameter property="DailyStatementNo"/>
        <parameter property="DeviceNo"/>
        <parameter property="BelongToDate"/>
        <parameter property="Weather"/>
        <parameter property="EmployeeID"/>
        <parameter property="ReturnValue" column="ReturnValue" direction="Output" />
      </parameterMap>
	  </parameterMaps>

    <!-- =============================================
        MAPPED STATEMENTS 
    ============================================= 
    -->
    <statements>
      <select id="SelectDailyStatementNo" resultClass="String">
        SELECT DailyStatementNo FROM DailyStatement WHERE BelongToDate IS NULL AND IsVoided = 0
      </select>

      <insert id="InsertDailyStatement" parameterClass="DailyStatement">
	      INSERT INTO DailyStatement(DailyStatementID, DailyStatementNo)
	      VALUES(#DailyStatementID#, #DailyStatementNo#)
      </insert>

      <procedure id="UpdateDailyStatement" parameterMap="DailyStatementParam">
	      proc_UpdateDailyStatement
      </procedure>

      <select id="SelectDailyStatementTimeInterval" parameterClass="String" resultClass="String">
        SELECT CONVERT(VARCHAR(10),MIN(PayTime),120) + ',' + CONVERT(VARCHAR(10),MAX(PayTime),120) AS DailyStatementTime
        FROM [Order]
        WHERE DailyStatementNo = #value#
      </select>

      <select id="SelectLastDailyStatementDate" resultClass="DateTime">
        SELECT TOP 1 ISNULL(BelongToDate, DATEADD(DAY,-1,GETDATE())) AS LastBelongDate
        FROM DailyStatement
        ORDER BY BelongToDate DESC
      </select>

      <select id="SelectDailyBalanceTime" parameterClass="DateTime" resultMap="DailyBalanceTimeResult">
        SELECT ds.DailyStatementNo, MIN(o.PayTime) AS MinTime, MAX(o.PayTime) AS MaxTime
        FROM [Order] o JOIN DailyStatement ds ON ds.DailyStatementNo = o.DailyStatementNo
        WHERE ds.BelongToDate = #value# AND ds.IsVoided = 0 AND o.IsVoided = 0
        GROUP BY ds.DailyStatementNo
        ORDER BY ds.DailyStatementNo
      </select>

      <select id="GetDailyStatementInDays" parameterClass="System.Collections.Hashtable" resultMap="DailyStatementInDayResult">
        SELECT ds.BelongToDate, dt.ActualTotalIncome + dt.TotalServiceFee AS ActualTotalIncome
        FROM DailyStatement ds JOIN DailyTurnover dt ON dt.DailyStatementNo = ds.DailyStatementNo
        WHERE ds.BelongToDate BETWEEN #BeginDate# AND #EndDate#
        ORDER BY ds.BelongToDate
      </select>
    </statements>
</sqlMap>
